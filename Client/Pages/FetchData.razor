@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <h1>You are not authorized to access weather data. Please sign in via the button below.</h1>
    <a href="/signin" class="btn btn-primary btn-lg">Sign in</a>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts = null;
    [CascadingParameter] protected Task<AuthenticationState> AuthenticationState { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;

        if (user.Identity.IsAuthenticated == true)
        {
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(APIEndpoints.s_weatherForecast);
        }        
    }
    
    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
